version: '3.7'

services:
  db:
    image: postgres:15.0-alpine
    hostname: db
    container_name: app_db
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 3s
      retries: 5
      start_period: 30s
      timeout: 5s

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - .example.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

  test:
    image: golang:alpine
    working_dir: /app
    env_file:
      - .example.env
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
    command: go test ./tests/... -v -coverprofile=coverage.out
    profiles:
      - test

volumes:
  postgres_data:
